name: Build OCI Images

on:
  - pull_request

env:
  COLORTERM: 'yes'
  TERM: 'xterm-256color'
  PYTEST_ADDOPTS: '--color=yes'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - uses: actions/setup-python@v4

      - name: Check commit message
        if: github.event_name == 'pull_request'
        env:
          GITHUB_CONTEXT: ${{ github.event.pull_request.commits_url }}
        run: |
          echo ::group::REQUESTS
          pip install pygithub
          echo ::endgroup::
          for sha in $(curl $GITHUB_CONTEXT | jq '.[].sha' | sed 's/"//g')
          do
            python .ci/scripts/validate_commit_message.py $sha
            VALUE=$?
            if [ "$VALUE" -gt 0 ]; then
              exit $VALUE
            fi
          done
        shell: bash
  build:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        include:
          - ci_type: pulp_ci_centos
            ci_image: pulp-ci-centos
            test_type: pulp_galaxy_ng
            test_image: pulp-galaxy-ng
          - ci_type: pulp_ci_centos
            ci_image: pulp-ci-centos
            test_type: pulp
            test_image: pulp
    steps:
      - uses: actions/checkout@v2
      - name: Build the images
        run: |
          wget https://github.com/just-containers/s6-overlay/releases/download/v3.1.2.1/s6-overlay-x86_64.tar.xz
          wget https://github.com/just-containers/s6-overlay/releases/download/v3.1.2.1/s6-overlay-noarch.tar.xz
          wget https://github.com/just-containers/s6-overlay/releases/download/v3.1.2.1/s6-overlay-symlinks-arch.tar.xz
          wget https://github.com/just-containers/s6-overlay/releases/download/v3.1.2.1/s6-overlay-symlinks-noarch.tar.xz
          unxz s6-overlay*.tar.xz
          gzip s6-overlay*.tar
          docker build --file s6_images/${{ matrix.ci_type }}/Containerfile --tag pulp/${{ matrix.ci_image }}:latest .
          docker build --file s6_images/${{ matrix.test_type }}/Containerfile --tag pulp/${{ matrix.test_image }}:latest .
      - name: Test the images
        run: s6_images/assets/test.sh "pulp/${{ matrix.test_image }}:latest"
      - name: Display log on error
        if: failure()
        run: docker logs pulp

  sslbuild:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        include:
          - ci_type: pulp_ci_centos
            ci_image: pulp-ci-centos
            test_type: pulp_galaxy_ng
            test_image: pulp-galaxy-ng
          - ci_type: pulp_ci_centos
            ci_image: pulp-ci-centos
            test_type: pulp
            test_image: pulp
    steps:
      - uses: actions/checkout@v2
      - name: Build the images
        run: |
          wget https://github.com/just-containers/s6-overlay/releases/download/v3.1.2.1/s6-overlay-x86_64.tar.xz
          wget https://github.com/just-containers/s6-overlay/releases/download/v3.1.2.1/s6-overlay-noarch.tar.xz
          wget https://github.com/just-containers/s6-overlay/releases/download/v3.1.2.1/s6-overlay-symlinks-arch.tar.xz
          wget https://github.com/just-containers/s6-overlay/releases/download/v3.1.2.1/s6-overlay-symlinks-noarch.tar.xz
          unxz s6-overlay*.tar.xz
          gzip s6-overlay*.tar
          docker build --build-arg SCHEME="https" --file s6_images/${{ matrix.ci_type }}/Containerfile --tag pulp/${{ matrix.ci_image }}:https .
          docker build --build-arg FROM_TAG="https" --file s6_images/${{ matrix.test_type }}/Containerfile --tag pulp/${{ matrix.test_image }}:https .
      - name: Test the images
        run: s6_images/assets/test.sh "pulp/${{ matrix.test_image }}:https" https
      - name: Display log on error
        if: failure()
        run: docker logs pulp
