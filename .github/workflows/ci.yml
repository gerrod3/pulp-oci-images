name: pulp-oci-images CI

on:
  pull_request:
    paths:
      - "images/**"
      - ".github/**"
      - ".ci/**"
env:
  COLORTERM: 'yes'
  TERM: 'xterm-256color'
  PYTEST_ADDOPTS: '--color=yes'

concurrency:
  group: ${{ github.ref_name }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Check commit message
        env:
          GITHUB_CONTEXT: ${{ github.event.pull_request.commits_url }}
        run: |
          echo ::group::REQUESTS
          pip install pygithub
          echo ::endgroup::
          for sha in $(curl $GITHUB_CONTEXT | jq '.[].sha' | sed 's/"//g')
          do
            python .ci/scripts/validate_commit_message.py $sha
            VALUE=$?
            if [ "$VALUE" -gt 0 ]; then
              exit $VALUE
            fi
          done
        shell: bash

  base-images:
    runs-on: ubuntu-latest
    outputs:
      base_cache_key: "${{ steps.build_base_images.outputs.base_cache_key }}"
    steps:
      - uses: actions/checkout@v4

      - name: Build base images
        id: build_base_images
        uses: "./.github/actions/base_images"
        with:
          python_version: "3.9"

  app-images:
    needs: base-images
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.build_image.outputs.app_version }}
      app_branch: ${{ steps.build_image.outputs.app_branch }}
    strategy:
      fail-fast: false
      matrix:
        image_name:
          - pulp-minimal
          - pulp
    steps:
      - uses: actions/checkout@v4

      - name: Build App Image
        id: build_image
        uses: "./.github/actions/build_image"
        with:
          image_name: ${{ matrix.image_name }}
          image_variant: "stable"
          image_cache_key: ${{ needs.base-images.outputs.base_cache_key }}
          latest_ui: ${{ github.base_ref == 'latest' }}

      - name: Test App Image
        uses: "./.github/actions/test_image"
        with:
          image_name: ${{ matrix.image_name }}
          app_branch: ${{ steps.build_image.outputs.app_branch }}

      - name: Logs
        if: always()
        run: |
          set +e
          podman ps -a
          podman images -a
          podman logs pulp
          cd images/compose
          podman-compose logs
          podman logs --tail=10000 compose_pulp_api_1
          podman logs --tail=10000 compose_pulp_content_1
          podman logs --tail=10000 compose_pulp_worker_1
          podman logs --tail=10000 compose_pulp_worker_2
          podman logs --tail=10000 compose_pulp_web_1
          VOLUME_PATH=$(podman volume inspect pulpdev | jq -r .[].Mountpoint)
          sudo ls -al $VOLUME_PATH
          sudo tree $VOLUME_PATH
          http --follow --timeout 30 --check-status --pretty format --print hb http://localhost:8080/pulp/api/v3/status/ || true
